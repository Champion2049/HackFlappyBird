function FlappyBirdGame.new 0
push constant 18
call Memory.alloc 1
pop pointer 0
push constant 150
pop this 7
call Scoreboard.new 0
pop this 1
push constant 10
call Array.new 1
pop this 3
push constant 0
pop this 8
push constant 100
pop this 9
push constant 0
pop this 10
push constant 1
pop this 15
push constant 0
pop this 11
push constant 0
pop this 16
push constant 15
pop this 12
push constant 120
pop this 13
push constant 112
pop this 14
push pointer 0
return
function FlappyBirdGame.displayInstructions 0
push argument 0
pop pointer 0
push constant 0
push constant 0
call Output.moveCursor 2
pop temp 0
push constant 29
call String.new 1
push constant 84
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 74
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 44
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 27
call String.new 1
push constant 84
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 81
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 44
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 39
call String.appendChar 2
push constant 113
call String.appendChar 2
push constant 39
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 107
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 19
call String.new 1
push constant 84
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 44
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 46
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 21
call String.new 1
push constant 82
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 102
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 33
call String.appendChar 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 12
call String.new 1
push constant 72
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 103
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 83
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 16
call Output.printInt 1
pop temp 0
push constant 0
return
function FlappyBirdGame.run 4
push argument 0
pop pointer 0
push constant 0
pop local 3
push pointer 0
call FlappyBirdGame.initializeGameState 1
pop temp 0
push pointer 0
call FlappyBirdGame.waitForGameToStart 1
pop temp 0
push constant 0
pop local 1
label WHILE_EXP0
push local 3
not
not
if-goto WHILE_END0
call Keyboard.keyPressed 0
pop local 0
push local 0
push constant 32
eq
push local 1
push constant 32
eq
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 15
push constant 1
add
pop this 15
push this 0
call FlappyBird.moveUp 1
pop temp 0
goto IF_END0
label IF_FALSE0
push pointer 0
call FlappyBirdGame.updateBirdFallState 1
pop temp 0
push pointer 0
call FlappyBirdGame.updateBirdWingState 1
pop temp 0
label IF_END0
push local 0
push constant 81
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 3
label IF_FALSE1
push local 3
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call FlappyBirdGame.shiftPipesLeft 1
pop temp 0
push pointer 0
call FlappyBirdGame.disposeUnseenPipe 1
pop temp 0
push pointer 0
call FlappyBirdGame.createNewPipe 1
pop temp 0
push pointer 0
call FlappyBirdGame.spawnTreatIfNeeded 1
pop temp 0
push this 2
call Treat.treatAdvance 1
pop temp 0
push pointer 0
call FlappyBirdGame.checkTreatCollision 1
pop temp 0
push this 2
call Treat.timerTick 1
pop temp 0
push pointer 0
call FlappyBirdGame.calculateScore 1
pop local 2
push pointer 0
push local 2
call FlappyBirdGame.updateLevel 2
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push constant 0
push constant 60
push constant 15
push constant 255
call Screen.drawRectangle 4
pop temp 0
push pointer 0
call FlappyBirdGame.findCollision 1
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 2
push this 16
gt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 2
pop this 16
label IF_FALSE4
push pointer 0
call FlappyBirdGame.displayScore 1
pop temp 0
push constant 3000
call Sys.wait 1
pop temp 0
push constant 15
pop this 12
push constant 120
pop this 13
push pointer 0
call FlappyBirdGame.initializeGameState 1
pop temp 0
push pointer 0
call FlappyBirdGame.waitForGameToStart 1
pop temp 0
push constant 0
pop local 1
push constant 0
pop local 0
goto IF_END3
label IF_FALSE3
push this 0
call FlappyBird.draw 1
pop temp 0
label IF_END3
label IF_FALSE2
push local 0
pop local 1
push constant 20
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call FlappyBirdGame.dispose 1
pop temp 0
push constant 0
return
function FlappyBirdGame.waitForGameToStart 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
if-goto WHILE_END0
push this 0
call FlappyBird.draw 1
pop temp 0
push pointer 0
call FlappyBirdGame.updateBirdWingState 1
pop temp 0
push constant 50
call Sys.wait 1
pop temp 0
call Keyboard.keyPressed 0
pop local 0
goto WHILE_EXP0
label WHILE_END0
label WHILE_EXP1
call Keyboard.keyPressed 0
push constant 0
eq
not
not
if-goto WHILE_END1
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
function FlappyBirdGame.updateLevel 0
push argument 0
pop pointer 0
push argument 1
push constant 50
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 3
pop this 17
push constant 40
pop this 12
push constant 75
pop this 13
goto IF_END0
label IF_FALSE0
push argument 1
push constant 25
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 2
pop this 17
push constant 35
pop this 12
push constant 90
pop this 13
goto IF_END1
label IF_FALSE1
push argument 1
push constant 10
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
pop this 17
push constant 25
pop this 12
push constant 100
pop this 13
goto IF_END2
label IF_FALSE2
push constant 0
pop this 17
push constant 15
pop this 12
push constant 120
pop this 13
label IF_END2
label IF_END1
label IF_END0
push constant 0
return
function FlappyBirdGame.initializeGameState 1
push argument 0
pop pointer 0
call Screen.clearScreen 0
pop temp 0
push pointer 0
call FlappyBirdGame.displayInstructions 1
pop temp 0
push this 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call FlappyBird.dispose 1
pop temp 0
label IF_FALSE0
push this 7
call FlappyBird.new 1
pop this 0
push this 2
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
call Treat.dispose 1
pop temp 0
label IF_FALSE1
call Treat.new 0
pop this 2
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 8
lt
not
if-goto WHILE_END0
push local 0
push this 3
add
pop pointer 1
push that 0
pop this 4
push this 4
push constant 0
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 4
call Pipe.erase 1
pop temp 0
push this 4
call Pipe.dispose 1
pop temp 0
label IF_FALSE2
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop this 8
push constant 0
pop this 11
push constant 1
pop this 5
push constant 1
pop this 6
push this 9
pop this 10
push constant 112
pop this 14
push constant 0
pop this 15
push constant 0
return
function FlappyBirdGame.displayScore 1
push argument 0
pop pointer 0
push pointer 0
call FlappyBirdGame.calculateScore 1
pop local 0
push this 1
push local 0
call Scoreboard.draw 2
pop temp 0
push constant 0
return
function FlappyBirdGame.updateBirdFallState 1
push argument 0
pop pointer 0
push constant 5
pop local 0
push this 2
call Treat.treatOn 1
push constant 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 10
pop local 0
label IF_FALSE0
push this 6
push local 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
pop this 6
label IF_FALSE1
push this 6
push local 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
call FlappyBird.moveDown 1
pop temp 0
push constant 1
pop this 6
goto IF_END2
label IF_FALSE2
push this 6
push constant 1
add
pop this 6
label IF_END2
push constant 0
return
function FlappyBirdGame.updateBirdWingState 0
push argument 0
pop pointer 0
push this 5
push constant 5
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call FlappyBird.cycleWingState 1
pop temp 0
push constant 1
pop this 5
goto IF_END0
label IF_FALSE0
push this 5
push constant 1
add
pop this 5
label IF_END0
push constant 0
return
function FlappyBirdGame.shiftPipesLeft 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 8
lt
not
if-goto WHILE_END0
push local 0
push this 3
add
pop pointer 1
push that 0
pop this 4
push this 4
call Pipe.moveLeft 1
pop temp 0
push this 4
call Pipe.draw 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function FlappyBirdGame.disposeUnseenPipe 1
push argument 0
pop pointer 0
push this 8
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 0
push this 3
add
pop pointer 1
push that 0
pop this 4
push this 4
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 4
call Pipe.isOffScreen 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 4
call Pipe.dispose 1
pop temp 0
push this 8
push constant 1
sub
pop this 8
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 8
lt
not
if-goto WHILE_END0
push local 0
push this 3
add
push local 0
push constant 1
add
push this 3
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 8
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
label IF_FALSE1
push constant 0
return
function FlappyBirdGame.createNewPipe 1
push argument 0
pop pointer 0
push this 10
push this 9
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 8
push constant 10
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 8
push this 3
add
push this 15
push this 12
push this 13
call Pipe.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 8
push this 3
add
pop pointer 1
push that 0
pop this 4
push this 4
call Pipe.getGapTop 1
push this 13
push constant 2
call Math.divide 2
add
pop local 0
push local 0
pop this 14
push this 8
push constant 1
add
pop this 8
push this 11
push constant 1
add
pop this 11
push constant 0
pop this 10
label IF_FALSE1
goto IF_END0
label IF_FALSE0
push this 8
push constant 0
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
push this 3
add
pop pointer 1
push that 0
pop this 4
push this 4
push constant 0
eq
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 10
push this 4
call Pipe.getWidthIncrement 1
add
pop this 10
goto IF_END3
label IF_FALSE3
push this 10
push constant 1
add
pop this 10
label IF_END3
goto IF_END2
label IF_FALSE2
push this 10
push constant 1
add
pop this 10
label IF_END2
label IF_END0
push constant 0
return
function FlappyBirdGame.spawnTreatIfNeeded 2
push argument 0
pop pointer 0
push constant 3
pop local 1
push this 2
call Treat.treatComing 1
push constant 0
eq
push this 2
call Treat.treatOn 1
push constant 0
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 15
push this 11
add
push this 0
call FlappyBird.getYOffset 1
add
push constant 100
call MyMath.mod 2
push constant 1
add
pop local 0
push local 0
push local 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 15
push this 0
call FlappyBird.getYOffset 1
call Math.multiply 2
push this 11
add
push constant 5
add
push constant 4
call MyMath.mod 2
push constant 1
add
pop local 0
push this 2
push local 0
push this 14
call Treat.startComing 3
pop temp 0
push this 2
call Treat.writeExplain 1
pop temp 0
label IF_FALSE1
label IF_FALSE0
push constant 0
return
function FlappyBirdGame.checkTreatCollision 10
push argument 0
pop pointer 0
push this 2
call Treat.treatComing 1
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call FlappyBird.getXOffset 1
pop local 0
push this 0
call FlappyBird.getYOffset 1
pop local 1
push this 0
call FlappyBird.getSizeX 1
pop local 2
push this 0
call FlappyBird.getSizeY 1
pop local 3
push this 2
call Treat.getTreatXpos 1
pop local 4
push this 2
call Treat.getTreatYpos 1
pop local 5
push this 2
call Treat.getTreatWidth 1
pop local 6
push this 2
call Treat.getTreatHeight 1
pop local 7
push local 0
push local 2
add
push local 4
gt
push local 0
push local 4
push local 6
add
lt
and
pop local 8
push local 1
push local 3
add
push local 5
gt
push local 1
push local 5
push local 7
add
lt
and
pop local 9
push local 8
push local 9
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
call Treat.treatGot 1
pop temp 0
label IF_FALSE1
label IF_FALSE0
push constant 0
return
function FlappyBirdGame.calculateScore 2
push argument 0
pop pointer 0
push this 11
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 8
lt
not
if-goto WHILE_END0
push local 1
push this 3
add
pop pointer 1
push that 0
pop this 4
push this 0
call FlappyBird.getXOffset 1
push this 4
call Pipe.getXOffset 1
push this 4
call Pipe.getWidthCurrent 1
add
push constant 1
add
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
sub
pop local 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push this 2
call Treat.treatOn 1
push constant 3
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 2
call Math.multiply 2
pop local 0
label IF_FALSE1
push local 0
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop local 0
label IF_FALSE2
push local 0
return
function FlappyBirdGame.findCollision 1
push argument 0
pop pointer 0
push this 2
call Treat.treatOn 1
push constant 4
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
call FlappyBird.getYOffset 1
push constant 0
lt
push this 0
call FlappyBird.getYOffset 1
push this 0
call FlappyBird.getSizeY 1
add
push constant 255
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 8
lt
not
if-goto WHILE_END0
push local 0
push this 3
add
pop pointer 1
push that 0
pop this 4
push this 4
push constant 0
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
push this 4
call FlappyBirdGame.collides 2
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 2
call Treat.treatOn 1
push constant 1
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 2
call Treat.treatDone 1
pop temp 0
push constant 0
return
label IF_FALSE4
push constant 0
not
return
label IF_FALSE3
label IF_FALSE2
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function FlappyBirdGame.collides 8
push argument 0
pop pointer 0
push this 0
call FlappyBird.getXOffset 1
pop local 0
push this 0
call FlappyBird.getYOffset 1
pop local 1
push this 0
call FlappyBird.getSizeX 1
pop local 2
push this 0
call FlappyBird.getSizeY 1
pop local 3
push argument 1
call Pipe.getXOffset 1
pop local 4
push argument 1
call Pipe.getWidthCurrent 1
pop local 5
push argument 1
call Pipe.getGapTop 1
pop local 6
push argument 1
call Pipe.getGapBottom 1
pop local 7
push local 0
push local 2
add
push local 4
gt
push local 0
push local 4
push local 5
add
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 6
lt
push local 1
push local 3
add
push local 7
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
label IF_FALSE0
push constant 0
return
function FlappyBirdGame.dispose 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 8
lt
not
if-goto WHILE_END0
push local 0
push this 3
add
pop pointer 1
push that 0
pop this 4
push this 4
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
call Pipe.dispose 1
pop temp 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 3
call Array.dispose 1
pop temp 0
push this 1
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
call Scoreboard.dispose 1
pop temp 0
label IF_FALSE1
push this 0
push constant 0
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
call FlappyBird.dispose 1
pop temp 0
label IF_FALSE2
push this 2
push constant 0
eq
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 2
call Treat.dispose 1
pop temp 0
label IF_FALSE3
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
